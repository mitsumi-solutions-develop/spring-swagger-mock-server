{{^reactive}}
{{#examples}}
    {{#-first}}

    {{/-first}}

    {{#-last}}
        var responseBodyTypes = new HashMap<Integer, Class<?>>();
        {{#responses}}
        {{#baseType}}
        responseBodyTypes.put({{{code}}}, {{{baseType}}}.class);
        {{/baseType}}
        {{/responses}}

        var parameters = new HashMap<String, Object>();
        {{#allParams}}
        parameters.put("{{paramName}}", {{paramName}});
        {{/allParams}}

        return responseEntityDelegator().delegate(request(), responseBodyTypes, parameters);
            {{#async}}
        }, Runnable::run);
            {{/async}}
    {{/-last}}
{{/examples}}
{{^examples}}
{{#useResponseEntity}}return {{#async}}CompletableFuture.completedFuture({{/async}}new ResponseEntity<>({{#returnSuccessCode}}HttpStatus.OK{{/returnSuccessCode}}{{^returnSuccessCode}}HttpStatus.NOT_IMPLEMENTED{{/returnSuccessCode}}){{#async}}){{/async}};
{{/useResponseEntity}}
{{^useResponseEntity}}throw new IllegalArgumentException("Not implemented");
{{/useResponseEntity}}
{{/examples}}
{{/reactive}}
{{#reactive}}
{{^vendorExtensions.x-sse}}
Mono<Void> result = Mono.empty();
    {{#examples}}
        {{#-first}}
        exchange.getResponse().setStatusCode({{#returnSuccessCode}}HttpStatus.valueOf({{{statusCode}}}){{/returnSuccessCode}}{{^returnSuccessCode}}HttpStatus.NOT_IMPLEMENTED{{/returnSuccessCode}});
        for (MediaType mediaType : exchange.getRequest().getHeaders().getAccept()) {
        {{/-first}}
            if (mediaType.isCompatibleWith(MediaType.valueOf("{{{contentType}}}"))) {
                String exampleString = {{>exampleString}};
                result = ApiUtil.getExampleResponse(exchange, MediaType.valueOf("{{{generatedContentType}}}"), exampleString);
                break;
            }
        {{#-last}}
        }
        {{/-last}}
    {{/examples}}
{{^examples}}
        exchange.getResponse().setStatusCode({{#returnSuccessCode}}HttpStatus.OK{{/returnSuccessCode}}{{^returnSuccessCode}}HttpStatus.NOT_IMPLEMENTED{{/returnSuccessCode}});
{{/examples}}
        return result{{#allParams}}{{#isBodyParam}}{{^isArray}}{{#paramName}}.then({{.}}){{/paramName}}{{/isArray}}{{#isArray}}{{#paramName}}.thenMany({{.}}){{/paramName}}{{/isArray}}{{/isBodyParam}}{{/allParams}}{{#isArray}}{{#useResponseEntity}}.then(Mono.empty()){{/useResponseEntity}}{{^useResponseEntity}}.thenMany(Flux.empty()){{/useResponseEntity}}{{/isArray}}{{^isArray}}.then(Mono.empty()){{/isArray}};
{{/vendorExtensions.x-sse}}
{{#vendorExtensions.x-sse}}
exchange.getResponse().setStatusCode({{#returnSuccessCode}}HttpStatus.valueOf({{{statusCode}}}){{/returnSuccessCode}}{{^returnSuccessCode}}HttpStatus.NOT_IMPLEMENTED{{/returnSuccessCode}});
        return Flux.empty();
{{/vendorExtensions.x-sse}}
{{/reactive}}
